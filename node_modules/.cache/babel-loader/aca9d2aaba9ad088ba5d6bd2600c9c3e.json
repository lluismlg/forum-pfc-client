{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lluis\\\\OneDrive\\\\Projects\\\\forum-pfc\\\\forum-pfc-client\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ImagePost from '../images/imagePost.png';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openPost = postId => {\n      console.log(window.location.hostname + \"/Post?postId=\" + postId);\n      window.location = \"/Post?postId=\" + postId;\n    };\n\n    this.openSubmit = postType => {\n      if (postType === \"\") {\n        window.location = \"/submit\";\n      } else {\n        window.location = \"/submit?postType=\" + postType;\n      }\n    };\n\n    this.state = {\n      Posts: []\n    };\n    this.url = \"https://forum-pfc-node.herokuapp.com\";\n    this.proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    this.probAnuncio = 0;\n  }\n\n  componentDidMount() {\n    const that = this;\n    fetch(this.proxyurl + \"/api/forum\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json' // \"origin\": \"https://forum-pfc-node.herokuapp.com\"\n\n      }\n    }).then(response => response.json()).then(data => {\n      that.setState({\n        Posts: data\n      });\n      console.log(data);\n    });\n    document.getElementById(\"submitInputId\").addEventListener('click', this.openSubmit.bind(this, \"text\"));\n    document.getElementById(\"submitImgHolderId\").addEventListener('click', this.openSubmit.bind(this, \"image\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homeFeed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"homeSubmitCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Create post\",\n      id: \"submitInputId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submitImgHolder\",\n      id: \"submitImgHolderId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: ImagePost,\n      alt: \"post pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    })))), this.state.Posts.map((post, i) => {\n      if (post.postType === \"text\") {\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"homeCard\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          onClick: this.openPost.bind(this, post.postId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 72\n          }\n        }, post.postTitle), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 97\n          }\n        }, post.postAuthor)), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 12\n          }\n        }, post.postContent)), /*#__PURE__*/React.createElement(Card.Footer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerTopic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }\n        }, post.postTopic), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 71\n          }\n        }, post.postDate)));\n      } else if (post.postType === \"image\") {\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"homeCard\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          onClick: this.openPost.bind(this, post.postId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 72\n          }\n        }, post.postTitle), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 97\n          }\n        }, post.postAuthor))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"homeCardImgHolder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Img, {\n          variant: \"top\",\n          src: post.postImg,\n          className: \"homeCardImg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 12\n          }\n        })), /*#__PURE__*/React.createElement(Card.Footer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerTopic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 24\n          }\n        }, post.postTopic), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 71\n          }\n        }, post.postDate)));\n      } else if (post.postType === \"link\") {\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"homeCard\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          onClick: this.openPost.bind(this, post.postId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 72\n          }\n        }, post.postTitle), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 97\n          }\n        }, post.postAuthor)), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: post.postContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, post.postContent))), /*#__PURE__*/React.createElement(Card.Footer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerTopic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 24\n          }\n        }, post.postTopic), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"footerDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 71\n          }\n        }, post.postDate)));\n      } else {\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"homeCard\",\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 24\n          }\n        }, \"Error\"))));\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/lluis/OneDrive/Projects/forum-pfc/forum-pfc-client/src/components/Home.js"],"names":["React","Component","Card","ImagePost","Home","constructor","props","openPost","postId","console","log","window","location","hostname","openSubmit","postType","state","Posts","url","proxyurl","probAnuncio","componentDidMount","that","fetch","headers","then","response","json","data","setState","document","getElementById","addEventListener","bind","render","map","post","i","postTitle","postAuthor","postContent","postTopic","postDate","postImg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport ImagePost from '../images/imagePost.png'\r\n\r\nclass Home extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tPosts: []\r\n\t\t}\r\n\r\n\t\tthis.url = \"https://forum-pfc-node.herokuapp.com\"\r\n\t\tthis.proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n\t\tthis.probAnuncio = 0;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst that = this;\r\n\r\n\t\tfetch(this.proxyurl + \"/api/forum\", {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Accept': 'application/json'\r\n\t\t\t\t// \"origin\": \"https://forum-pfc-node.herokuapp.com\"\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tthat.setState({\r\n\t\t\t\t\tPosts: data\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t});\r\n\r\n\t\tdocument.getElementById(\"submitInputId\").addEventListener('click', this.openSubmit.bind(this, \"text\"));\r\n\t\tdocument.getElementById(\"submitImgHolderId\").addEventListener('click', this.openSubmit.bind(this, \"image\"));\r\n\t}\r\n\r\n\topenPost = (postId) => {\r\n\t\tconsole.log(window.location.hostname + \"/Post?postId=\" + postId)\r\n\t\twindow.location = \"/Post?postId=\" + postId;\r\n\t}\r\n\topenSubmit = (postType) => {\r\n\t\tif (postType === \"\") {\r\n\t\t\twindow.location = \"/submit\";\r\n\t\t} else {\r\n\t\t\twindow.location = \"/submit?postType=\" + postType;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t<div className=\"homeFeed\">\r\n\t\t\t\t\t<Card className=\"homeSubmitCard\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Create post\" id=\"submitInputId\"></input>\r\n\t\t\t\t\t\t\t<div className=\"submitImgHolder\" id=\"submitImgHolderId\">\r\n\t\t\t\t\t\t\t\t<img src={ImagePost} alt=\"post pic\"></img>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.Posts.map((post, i) => {\r\n\t\t\t\t\t\t\tif (post.postType === \"text\") {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card className=\"homeCard\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title onClick={this.openPost.bind(this, post.postId)}><h5>{post.postTitle}</h5><p className=\"author\">{post.postAuthor}</p></Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>{post.postContent}</Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Footer><p className=\"footerTopic\">{post.postTopic}</p><p className=\"footerDate\">{post.postDate}</p></Card.Footer>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t} else if (post.postType === \"image\") {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card className=\"homeCard\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title onClick={this.openPost.bind(this, post.postId)}><h5>{post.postTitle}</h5><p className=\"author\">{post.postAuthor}</p></Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"homeCardImgHolder\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={post.postImg} className=\"homeCardImg\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Footer><p className=\"footerTopic\">{post.postTopic}</p><p className=\"footerDate\">{post.postDate}</p></Card.Footer>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t} else if (post.postType === \"link\") {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card className=\"homeCard\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title onClick={this.openPost.bind(this, post.postId)}><h5>{post.postTitle}</h5><p className=\"author\">{post.postAuthor}</p></Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text><a href={post.postContent}>{post.postContent}</a></Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Card.Footer><p className=\"footerTopic\">{post.postTopic}</p><p className=\"footerDate\">{post.postDate}</p></Card.Footer>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card className=\"homeCard\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title><h5>Error</h5></Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Home\r\n\r\n"]},"metadata":{},"sourceType":"module"}