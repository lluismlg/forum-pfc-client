{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lluis\\\\OneDrive\\\\Projects\\\\forum-pfc\\\\forum-pfc-client\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Downvote from '../images/downvote.png';\nimport Upvote from '../images/upvote.png';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.votePost = (postId, postLikes, vote) => {\n      if (this.voted === \"\") {\n        if (vote === \"upvote\") {\n          console.log(\"upvoted\");\n          this.voted = \"upvoted\";\n          document.getElementById(\"Upvote\").style.filter = \"contrast(100%)\";\n          document.getElementById(\"Likes\").innerHTML = postLikes + 1; // LLAMAR A NODE PARA VOTAR (+1)\n\n          fetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=1\");\n        } else {\n          console.log(\"downvoted\");\n          this.voted = \"downvoted\";\n          document.getElementById(\"Downvote\").style.filter = \"contrast(100%)\";\n          document.getElementById(\"Likes\").innerHTML = postLikes - 1; // LLAMAR A NODE PARA VOTAR (-1)\n\n          fetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=-1\");\n        }\n      } else {\n        // UPVOTE\n        if (this.voted === \"upvoted\") {\n          if (vote === \"upvote\") {\n            console.log(\"You removed the upvoted\");\n            document.getElementById(\"Upvote\").style.filter = \"contrast(0%)\";\n            document.getElementById(\"Likes\").innerHTML = postLikes;\n            this.voted = \"\"; // LLAMAR A NODE PARA VOTAR (-1)\n\n            fetch(this.ip + \"/api/vote?postId=\" + postId + \"&vote=-1\");\n          } else {\n            console.log(\"You upvoted but now downvote\");\n            this.voted = \"downvoted\";\n            document.getElementById(\"Upvote\").style.filter = \"contrast(0%)\";\n            document.getElementById(\"Downvote\").style.filter = \"contrast(100%)\";\n            document.getElementById(\"Likes\").innerHTML = postLikes - 1; // LLAMAR A NODE PARA CAMBIAR EL VOTO (-2)\n\n            fetch(this.ip + \"/api/vote?postId=\" + postId + \"&vote=-2\");\n          }\n        } // DOWNVOTE\n        else {\n            if (vote === \"downvote\") {\n              console.log(\"You removed the downvoted\");\n              document.getElementById(\"Downvote\").style.filter = \"contrast(0%)\";\n              document.getElementById(\"Likes\").innerHTML = postLikes;\n              this.voted = \"\"; // LLAMAR A NODE PARA VOTAR (+1)\n\n              fetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=1\");\n            } else {\n              console.log(\"You downvoted but now upvoted\");\n              this.voted = \"upvoted\";\n              document.getElementById(\"Upvote\").style.filter = \"contrast(100%)\";\n              document.getElementById(\"Downvote\").style.filter = \"contrast(0%)\";\n              document.getElementById(\"Likes\").innerHTML = postLikes + 1; // LLAMAR A NODE PARA CAMBIAR EL VOTO (+2)\n\n              fetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=2\");\n            }\n          }\n      }\n    };\n\n    this.uploadComment = () => {\n      var content;\n      var date = \"\";\n      /* GET DATE */\n\n      var today = new Date();\n      var yyyy = today.getFullYear();\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\n      var dd = String(today.getDate()).padStart(2, '0');\n      date = yyyy + '-' + mm + '-' + dd;\n      /* TEMPORARY UNTIL I GET LOG IN */\n\n      var author = \"unknown\";\n      /* GET DATA */\n\n      content = document.getElementById(\"CommentContent\").value;\n      /* CHECK DATA */\n\n      console.log(this.state.PostId);\n      console.log(date);\n      console.log(\"author \" + author);\n      console.log(\"content \" + content);\n      /* UPLOAD COMMENT */\n\n      fetch(this.url + \"/api/uploadComment?postId=\" + this.state.PostId + \"&commentDate=\" + date + \"&commentAuthor=\" + author + \"&commentContent=\" + content);\n      /* RELOAD TO SHOW COMMENT */\n\n      window.location.reload();\n    };\n\n    this.state = {\n      PostId: null,\n      Post: [],\n      Comments: []\n    };\n    this.voted = \"\";\n    this.url = \"https://forum-pfc-node.herokuapp.com\";\n  }\n\n  componentDidMount() {\n    var url = new URL(window.location.href);\n    var postId = url.searchParams.get(\"postId\");\n    this.setState({\n      PostId: postId\n    });\n    const that = this;\n    fetch(this.url + \"/api/post?postId=\" + postId).then(response => response.json()).then(data => {\n      that.setState({\n        Post: data\n      });\n    });\n    fetch(this.url + \"/api/comments?postId=\" + postId).then(response => response.json()).then(data => {\n      that.setState({\n        Comments: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 4\n      }\n    }, this.state.Post.map((post, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"postCard\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 10\n        }\n      }, post.postTitle, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 38\n        }\n      }, post.postAuthor)), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 10\n        }\n      }, post.postContent), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"votes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: this.votePost.bind(this, post.postId, post.postLikes, \"upvote\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Upvote,\n        alt: \"Upvote\",\n        id: \"Upvote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 12\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"Likes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, post.postLikes), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: this.votePost.bind(this, post.postId, post.postLikes, \"downvote\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Downvote,\n        alt: \"Downvote\",\n        id: \"Downvote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 12\n        }\n      })))), /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: post.postImg,\n        className: \"postCardImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Card.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"footerTopic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 22\n        }\n      }, post.postTopic), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"footerDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 69\n        }\n      }, post.postDate)));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 6\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentCreator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"commentInputCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 22\n      }\n    }, \"Write your comment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"CommentContent\",\n      className: \"commentContent\",\n      placeholder: \"Comment\",\n      maxLength: \"250\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"commentUploadButton\",\n      value: \"UPLOAD\",\n      onClick: this.uploadComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 10\n      }\n    }))))), this.state.Comments.map((comment, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"commentCard\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"commentAuthor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, comment.commentAuthor), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"commentDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 79\n        }\n      }, comment.commentDate)), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, comment.commentContent)));\n    })));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/lluis/OneDrive/Projects/forum-pfc/forum-pfc-client/src/components/Post.js"],"names":["React","Component","Card","Downvote","Upvote","Post","constructor","props","votePost","postId","postLikes","vote","voted","console","log","document","getElementById","style","filter","innerHTML","fetch","url","ip","uploadComment","content","date","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","author","value","state","PostId","window","location","reload","Comments","componentDidMount","URL","href","searchParams","get","setState","that","then","response","json","data","render","map","post","i","postTitle","postAuthor","postContent","bind","postImg","postTopic","postDate","comment","commentAuthor","commentDate","commentContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport Downvote from '../images/downvote.png'\r\nimport Upvote from '../images/upvote.png'\r\n\r\nclass Post extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tPostId: null,\r\n\t\t\tPost: [],\r\n\t\t\tComments: []\r\n\t\t}\r\n\r\n\t\tthis.voted = \"\";\r\n\r\n\t\tthis.url = \"https://forum-pfc-node.herokuapp.com\"\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tvar url = new URL(window.location.href);\r\n\t\tvar postId = url.searchParams.get(\"postId\");\r\n\t\tthis.setState({\r\n\t\t\tPostId: postId\r\n\t\t})\r\n\r\n\t\tconst that = this;\r\n\r\n\t\tfetch(this.url + \"/api/post?postId=\" + postId)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tthat.setState({\r\n\t\t\t\t\tPost: data\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\tfetch(this.url + \"/api/comments?postId=\" + postId)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tthat.setState({\r\n\t\t\t\t\tComments: data\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t}\r\n\r\n\tvotePost = (postId, postLikes, vote) => {\r\n\t\tif (this.voted === \"\") {\r\n\t\t\tif (vote === \"upvote\") {\r\n\t\t\t\tconsole.log(\"upvoted\");\r\n\t\t\t\tthis.voted = \"upvoted\";\r\n\t\t\t\tdocument.getElementById(\"Upvote\").style.filter = \"contrast(100%)\";\r\n\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes + 1;\r\n\r\n\t\t\t\t// LLAMAR A NODE PARA VOTAR (+1)\r\n\t\t\t\tfetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=1\")\r\n\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"downvoted\");\r\n\t\t\t\tthis.voted = \"downvoted\"\r\n\t\t\t\tdocument.getElementById(\"Downvote\").style.filter = \"contrast(100%)\";\r\n\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes - 1;\r\n\r\n\t\t\t\t// LLAMAR A NODE PARA VOTAR (-1)\r\n\t\t\t\tfetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=-1\")\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// UPVOTE\r\n\t\t\tif (this.voted === \"upvoted\") {\r\n\t\t\t\tif (vote === \"upvote\") {\r\n\t\t\t\t\tconsole.log(\"You removed the upvoted\")\r\n\t\t\t\t\tdocument.getElementById(\"Upvote\").style.filter = \"contrast(0%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes;\r\n\t\t\t\t\tthis.voted = \"\";\r\n\r\n\t\t\t\t\t// LLAMAR A NODE PARA VOTAR (-1)\r\n\t\t\t\t\tfetch(this.ip + \"/api/vote?postId=\" + postId + \"&vote=-1\")\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"You upvoted but now downvote\")\r\n\t\t\t\t\tthis.voted = \"downvoted\"\r\n\t\t\t\t\tdocument.getElementById(\"Upvote\").style.filter = \"contrast(0%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Downvote\").style.filter = \"contrast(100%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes - 1;\r\n\r\n\t\t\t\t\t// LLAMAR A NODE PARA CAMBIAR EL VOTO (-2)\r\n\t\t\t\t\tfetch(this.ip + \"/api/vote?postId=\" + postId + \"&vote=-2\")\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// DOWNVOTE\r\n\t\t\telse {\r\n\t\t\t\tif (vote === \"downvote\") {\r\n\t\t\t\t\tconsole.log(\"You removed the downvoted\")\r\n\t\t\t\t\tdocument.getElementById(\"Downvote\").style.filter = \"contrast(0%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes;\r\n\t\t\t\t\tthis.voted = \"\";\r\n\r\n\t\t\t\t\t// LLAMAR A NODE PARA VOTAR (+1)\r\n\t\t\t\t\tfetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=1\")\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"You downvoted but now upvoted\")\r\n\t\t\t\t\tthis.voted = \"upvoted\"\r\n\t\t\t\t\tdocument.getElementById(\"Upvote\").style.filter = \"contrast(100%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Downvote\").style.filter = \"contrast(0%)\";\r\n\t\t\t\t\tdocument.getElementById(\"Likes\").innerHTML = postLikes + 1;\r\n\r\n\t\t\t\t\t// LLAMAR A NODE PARA CAMBIAR EL VOTO (+2)\r\n\t\t\t\t\tfetch(this.url + \"/api/vote?postId=\" + postId + \"&vote=2\")\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuploadComment = () => {\r\n\t\tvar content\r\n\t\tvar date = \"\"\r\n\r\n\t\t/* GET DATE */\r\n\t\tvar today = new Date();\r\n\t\tvar yyyy = today.getFullYear();\r\n\t\tvar mm = String(today.getMonth() + 1).padStart(2, '0');\r\n\t\tvar dd = String(today.getDate()).padStart(2, '0');\r\n\t\tdate = yyyy + '-' + mm + '-' + dd;\r\n\r\n\t\t/* TEMPORARY UNTIL I GET LOG IN */\r\n\t\tvar author = \"unknown\";\r\n\r\n\t\t/* GET DATA */\r\n\t\tcontent = document.getElementById(\"CommentContent\").value;\r\n\r\n\t\t/* CHECK DATA */\r\n\t\tconsole.log(this.state.PostId)\r\n\t\tconsole.log(date)\r\n\t\tconsole.log(\"author \" + author)\r\n\t\tconsole.log(\"content \" + content)\r\n\r\n\t\t/* UPLOAD COMMENT */\r\n\t\tfetch(this.url + \"/api/uploadComment?postId=\" + this.state.PostId + \"&commentDate=\" + date + \"&commentAuthor=\" + author + \"&commentContent=\" + content)\r\n\r\n\t\t/* RELOAD TO SHOW COMMENT */\r\n\t\twindow.location.reload()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"post\">\r\n\r\n\t\t\t\t{/* Divide in different kinds of post */}\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.Post.map((post, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Card className=\"postCard\" key={i}>\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<Card.Title>{post.postTitle}<p className=\"author\">{post.postAuthor}</p></Card.Title>\r\n\t\t\t\t\t\t\t\t\t<Card.Text>{post.postContent}</Card.Text>\r\n\t\t\t\t\t\t\t\t\t<div className=\"votes\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"arrow\" onClick={this.votePost.bind(this, post.postId, post.postLikes, \"upvote\")}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={Upvote}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Upvote\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"Upvote\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<p id=\"Likes\">{post.postLikes}</p>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"arrow\" onClick={this.votePost.bind(this, post.postId, post.postLikes, \"downvote\")}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={Downvote}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Downvote\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"Downvote\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={post.postImg} className=\"postCardImg\" />\r\n\t\t\t\t\t\t\t\t<Card.Footer><p className=\"footerTopic\">{post.postTopic}</p><p className=\"footerDate\">{post.postDate}</p></Card.Footer>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"comments\">\r\n\t\t\t\t\t<h2>Comments</h2>\r\n\t\t\t\t\t<div className=\"commentCreator\">\r\n\t\t\t\t\t\t<Card className=\"commentInputCard\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title ><h5>Write your comment</h5></Card.Title>\r\n\t\t\t\t\t\t\t\t<div className=\"commentInput\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"CommentContent\" className=\"commentContent\" placeholder=\"Comment\" maxLength=\"250\" />\r\n\t\t\t\t\t\t\t\t\t<input type=\"button\" className=\"commentUploadButton\" value=\"UPLOAD\" onClick={this.uploadComment} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.Comments.map((comment, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Card className=\"commentCard\" key={i}>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Title><p className=\"commentAuthor\">{comment.commentAuthor}</p><p className=\"commentDate\">{comment.commentDate}</p></Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Text>{comment.commentContent}</Card.Text>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Post\r\n\r\n"]},"metadata":{},"sourceType":"module"}